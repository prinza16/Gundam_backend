# Generated by Django 5.0.14 on 2025-07-04 09:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('grade', '0001_initial'),
        ('pilot', '0001_initial'),
        ('series', '0001_initial'),
        ('universe', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('seller_id', models.AutoField(db_column='seller_id', primary_key=True, serialize=False)),
                ('seller_name', models.CharField(blank=True, db_column='seller_name', max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'seller',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Types',
            fields=[
                ('types_id', models.AutoField(db_column='types_id', primary_key=True, serialize=False)),
                ('types_name', models.CharField(blank=True, db_column='types_name', max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ModelData',
            fields=[
                ('model_id', models.AutoField(db_column='model_id', primary_key=True, serialize=False)),
                ('model_name', models.CharField(blank=True, db_column='model_name', max_length=100, null=True)),
                ('model_initial', models.CharField(blank=True, db_column='model_initial', max_length=100, null=True)),
                ('model_length', models.DecimalField(blank=True, db_column='model_length', decimal_places=2, max_digits=10, null=True)),
                ('model_width', models.DecimalField(blank=True, db_column='model_width', decimal_places=2, max_digits=10, null=True)),
                ('model_height', models.DecimalField(blank=True, db_column='model_height', decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('model_grade', models.ForeignKey(blank=True, db_column='model_grade', null=True, on_delete=django.db.models.deletion.SET_NULL, to='grade.grade')),
                ('model_seller', models.ForeignKey(blank=True, db_column='model_seller', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gundam_data.seller')),
                ('model_type', models.ForeignKey(blank=True, db_column='model_type', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gundam_data.types')),
            ],
            options={
                'db_table': 'model_data',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ModelImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='model_photos/')),
                ('is_main', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('model_data', models.ForeignKey(db_column='model_id', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='gundam_data.modeldata')),
            ],
            options={
                'db_table': 'model_image',
                'ordering': ['is_main', '-create_date'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ModelPilotAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.ForeignKey(db_column='model_id', on_delete=django.db.models.deletion.CASCADE, to='gundam_data.modeldata')),
                ('pilot', models.ForeignKey(db_column='pilot_id', on_delete=django.db.models.deletion.CASCADE, to='pilot.pilot')),
            ],
            options={
                'db_table': 'model_pilot_assignment',
                'managed': True,
                'unique_together': {('model', 'pilot')},
            },
        ),
        migrations.CreateModel(
            name='ModelSeriesOccurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.ForeignKey(db_column='model_id', on_delete=django.db.models.deletion.CASCADE, to='gundam_data.modeldata')),
                ('series', models.ForeignKey(db_column='series_id', on_delete=django.db.models.deletion.CASCADE, to='series.series')),
            ],
            options={
                'db_table': 'model_series_occurrence',
                'managed': True,
                'unique_together': {('model', 'series')},
            },
        ),
        migrations.CreateModel(
            name='ModelUniverseOccurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.ForeignKey(db_column='model_id', on_delete=django.db.models.deletion.CASCADE, to='gundam_data.modeldata')),
                ('universe', models.ForeignKey(db_column='universe_id', on_delete=django.db.models.deletion.CASCADE, to='universe.universe')),
            ],
            options={
                'db_table': 'model_universe_occurrence',
                'managed': True,
                'unique_together': {('model', 'universe')},
            },
        ),
    ]
